mut a = [1, 2, 3, 4, 5]
let b = []
mut c = []

fn move(n Num, mut source Array Num, mut target Array Num, auxiliary Array Num) {
    if n > 0 {
        // Move n - 1 disks from source to auxiliary, so they are out of the way
        move(n - 1, source, auxiliary, target)

        // Move the nth disk from source to target
        target.push(source.pop())

        // Display our progress
        print '{a} {b} {c}'

        // Move the n - 1 disks that we left on auxiliary onto target
        move(n - 1, auxiliary, target, source) // TODO: this should fail because `auxiliary` is not mut
    }
}

// Initiate call from source a to target c with auxiliary b
print '{a} {b} {c}'
move(a.length, a, c, b)