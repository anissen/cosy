let push = 0
let add = 1
let sub = 2

fn eval(code Array Num) {
    mut stack Array Num = []
    mut ip = 0
    for ip < code.length {
        let op = code[ip]
        if op == push {
            ip += 1
            stack.push(code[ip])
        } else if op == add {
            let right = stack.pop()
            let left = stack.pop()
            stack.push(left + right)
        } else if op == sub {
            let right = stack.pop()
            let left = stack.pop()
            stack.push(left - right)
        } 
        ip += 1
    }
    if stack.length > 0 print stack.pop()
}

let code = [ // (2 + 3) - 8
    push, 2,
    push, 3,
    add,
    push, 8,
    sub,
]
eval(code) // outputs -3
