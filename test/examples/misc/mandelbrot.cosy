// Mandelbrot, adapted from https://github.com/wren-lang/wren/blob/main/example/mandelbrot.wren
foreign fn floor(v Num) Num

let y_min = -0.2
let y_max = 0.1
let x_min = -1.5
let x_max = -1.1

for y_pixel in 0..24 {
    let y = (y_pixel / 24) * (y_max - y_min) + y_min
    mut pixels = ''
    for x_pixel in 0..80 {
        let x = (x_pixel / 79) * (x_max - x_min) + x_min
        mut pixel = ' '
        mut x0 = x
        mut y0 = y
        for iter in 0..80 {
            mut x1 = (x0 * x0) - (y0 * y0)
            mut y1 = 2 * x0 * y0

            // Add the seed.
            x1 = x1 + x
            y1 = y1 + y

            x0 = x1
            y0 = y1

            // Stop if the point escaped.
            let d = (x0 * x0) + (y0 * y0)
            if d > 4 {
                pixel = ' .:;+=xX$&'.split('')[floor(iter / 8)]
                break
            }
        }

        pixels += pixel
    }

    print pixels
}