// https://adventofcode.com/2020/day/6

foreign fn read_lines(path Str) Array Str

var input = read_lines('test/examples/advent-of-code-2020/data/day6.txt')
// var input = ['abc', '', 'a', 'b', 'c', '', 'ab', 'ac', '', 'a', 'a', 'a', 'a', '', 'b']

fn get_groups() {
    mut groups Array Array Str = []
    mut group Array Str = []
    for i in input {
        if i.length == 0 {
            groups.push(group)
            group = []
            continue
        }
        group.push(i)
    }
    if group.length > 0 {
        groups.push(group)
    }
    return groups
}

fn did_anyone_answer_question(group Array Str, question Str) Bool {
    for str in group {
        for letter in str.split('') {
            if letter == question {
                return true
            }
        }
    }
    return false
}

fn did_everyone_answer_question(group Array Str, question Str) Bool {
    for str in group {
        mut did_answer = false
        for letter in str.split('') {
            if letter == question {
                did_answer = true
                break
            }
        }
        if !did_answer {
            return false
        }
    }
    return true
}

fn group_answer_count(group Array Str, func Fn(Array Str, Str) Bool) {
    var questions = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
    mut question_count = 0
    for question in questions {
        if func(group, question) {
            question_count += 1
        }
    }
    return question_count
}

var groups = get_groups()

{ // part 1
    var total_questions_answered = groups.sum(fn(group Array Str) {
        return group_answer_count(group, did_anyone_answer_question)
    })
    print '# PART 1: ' + total_questions_answered + ' questions answered'
}

{ // part 2
    var total_questions_answered = groups.sum(fn(group Array Str) {
        return group_answer_count(group, did_everyone_answer_question)
    })
    print '# PART 2: ' + total_questions_answered + ' questions answered'
}
