// https://adventofcode.com/2020/day/3

foreign fn read_lines(path Str) Array Str

mut input Array Str
var test_mode = true
if test_mode {
    input = [
        '..##.......',
        '#...#...#..',
        '.#....#..#.',
        '..#.#...#.#',
        '.#...##..#.',
        '..#.##.....',
        '.#.#.#....#',
        '.#........#',
        '#.##...#...',
        '#...##....#',
        '.#..#...#.#',
    ]
} else {
    input = read_lines('test/examples/advent-of-code-2020/data/day3.txt')
}

fn count_trees(slope_x Num, slope_y Num) Num {
    mut x = 0
    mut y = 0
    mut trees = 0
    for {
        x += slope_x
        y += slope_y
        if y >= input.length {
            break
        }
        var row = input.get(y)
        if x >= row.length {
            x -= row.length
        }
        if row.charAt(x) == '#' {
            trees += 1
        }
    }
    return trees
}

// Part 1: Count trees with a 3-1 slope
{
    print '# PART 1: Number of trees hit: ' + count_trees(3, 1)
}

// Part 1: Multiple number of trees from different slopes
{
    // Slopes:
    // Right 1, down 1.
    // Right 3, down 1.
    // Right 5, down 1.
    // Right 7, down 1.
    // Right 1, down 2.
    mut result = 1
    for trees in [count_trees(1, 1), count_trees(3, 1), count_trees(5, 1), count_trees(7, 1), count_trees(1, 2)] {
        // print 'Number of trees hit: ' + trees
        result *= trees
    }
    print '# PART 2: Number of trees hit: ' + result
}
