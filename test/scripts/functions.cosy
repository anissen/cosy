fn f(a, b) { print a + ' ' + b + '!' }
f('Hello', 'World')
// f('hax0r')

// fn f() { print '!!!' } // should cause a 'redefinition error'

//fn x(a, b, c, d, e, f, g, h, i, h, j) { print 'too many parameters!' }

print f

fn h() {
    print 'step 1'
    return 1
    //print 'step 2'
    //return 2
}
print 'result: {h()}'

{ // return inner funciton
    fn make_hi_func() {
        fn say_hi(text) {
            return 'Hi ' + text
        }
        return say_hi
    }

    var say_hi_to = make_hi_func()
    print say_hi_to('John')
}

{ // scoping rules
    mut outer_scope = 42
    fn x() {
        outer_scope = outer_scope + 10
    }
    print outer_scope
    x()
    print outer_scope
}

{
    fn make_add_func(a) {
        fn do_add(b) {
            return a + b
        }
        return do_add
    }

    var add5 = make_add_func(5)
    print(add5(2)) // 7
}
