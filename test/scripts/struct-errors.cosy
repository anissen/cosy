
struct Point {
	mut x Num = 2
    var y = 4
    var a Array Num
}

struct Fake {
	mut x Num = 2
    mut a = '4'
}

{
    mut point = Point { x = 5, y = 13, a = [] } // ok
    print point
}

{
    mut point = Point { x = 5, y = 13, a = [], x = 3 } // fails (x initialized twice)
    print point
}

{
    mut point = Point { x = 5, y = 13 } // fails (a is not initialized)
    print point
}

{
    mut point = Point { a = [] } // ok
    point.x = 555
    point.y = 7 // fails (y is not mut)
    point.z = 8 // fails (z is not a member)
    point.w = fn() { // fails (w is not a member)
    	print 'hello'
    }
    print point
    print '{point.x}, {point.y}'
}

{
    mut p = Point { a = [] }
    p = Fake {} // fails (Point type != Fake type)
    print p
}

{
    struct Test {
        var a Array Num
        var p = Point { x = 4, y = 12 }
    }

    var test = Test { a = [], p = Point { x = 5, y = 13 } }
    print test
}
